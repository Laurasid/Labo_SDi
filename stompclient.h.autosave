#ifndef STOMPCLIENT_H
#define STOMPCLIENT_H

#include "istomp_protocoltoclient.h"
#include "istomp_clienttoprotocol.h"
#include <qcryptographichash.h>
#include <QDebug>

class STOMPClient : public ISTOMP_ProtocolToClient
{
    //Client informations
    const QString version = "1.2";
    const QString host = "sdi.hevs.ch";
    const QString port = "61614" ;
    const QString ID = "1703";
    const QString username = "sdi09";
    const QString password = static_cast<QString>(QCryptographicHash::hash(username.toUtf8(),QCryptographicHash::Md5).toHex().toLower());
    const QString destinationn = "/topic/sdi09.gem.command";
    
public:
    STOMPClient();
    ~STOMPClient();

    inline void initRelation(ISTOMP_ClientToProtocol* ProtocolLayer){_protocolLayer = ProtocolLayer;}

    //Connection services
    void connectConfirmation(bool status);
    void disconnectConfirmation(bool status);
    void disconnectIndication();

    //Data services
    void sendConfirmation(bool status);
    void subscribeConfirmation(bool status);
    void unsubscribeConfirmation(bool status);
    void messageConfirmation(bool status);
    void messageIndication(QString id, QString destination, QString body);

    inline bool isConnected(){return _isConnected;}
    inline QString getID(){return ID;}

private:

    bool _isConnected;
    bool _sendStatus;
    bool _subscribeStatus;
    bool _messageStatus;

    QString destinationTemp;
    QString bodyTemp;

    ISTOMP_ClientToProtocol* _protocolLayer;
};

#endif // STOMPCLIENT_H
